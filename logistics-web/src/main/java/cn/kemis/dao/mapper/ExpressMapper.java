package cn.kemis.dao.mapper;

import cn.kemis.dao.BaseMapper;
import cn.kemis.domain.ExpressWorkProcessDomain;
import cn.kemis.domain.StatisticsDomain;
import cn.kemis.domain.request.ExportDispatchedExpressRequest;
import cn.kemis.model.Express;
import cn.kemis.model.ExpressExample;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;

import java.util.List;
import java.util.Map;

/**
 * This class was generated by MyBatis Generator.
 * This class corresponds to the database table express
 *
 * @mbggenerated Sun Sep 25 20:38:29 CST 2016
 */
@Mapper
public interface ExpressMapper extends BaseMapper<Express, ExpressExample> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table express
     *
     * @mbggenerated Sun Sep 25 20:38:29 CST 2016
     */
    int countByExample(ExpressExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table express
     *
     * @mbggenerated Sun Sep 25 20:38:29 CST 2016
     */
    int deleteByExample(ExpressExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table express
     *
     * @mbggenerated Sun Sep 25 20:38:29 CST 2016
     */
    @Delete({
            "delete from express",
            "where expressId = #{expressId,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long expressId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table express
     *
     * @mbggenerated Sun Sep 25 20:38:29 CST 2016
     */
    @Insert({
            "insert into express (batchNo, expressCompany, ",
            "expressNumber, `type`, ",
            "delivery, exportTag, ",
            "price, weight, expressConsignee, ",
            "expressMobile, expressSchoolId, ",
            "expressSchool, expressProvince, ",
            "expressCity, expressDistrict, ",
            "expressAddress, remark, ",
            "`status`, createTime, ",
            "updateTime)",
            "values (#{batchNo,jdbcType=VARCHAR}, #{expressCompany,jdbcType=VARCHAR}, ",
            "#{expressNumber,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, ",
            "#{delivery,jdbcType=VARCHAR}, #{exportTag,jdbcType=BIT}, ",
            "#{price,jdbcType=INTEGER}, #{weight,jdbcType=VARCHAR}, #{expressConsignee,jdbcType=VARCHAR}, ",
            "#{expressMobile,jdbcType=VARCHAR}, #{expressSchoolId,jdbcType=VARCHAR}, ",
            "#{expressSchool,jdbcType=VARCHAR}, #{expressProvince,jdbcType=VARCHAR}, ",
            "#{expressCity,jdbcType=VARCHAR}, #{expressDistrict,jdbcType=VARCHAR}, ",
            "#{expressAddress,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, ",
            "#{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, ",
            "#{updateTime,jdbcType=TIMESTAMP})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="expressId", before=false, resultType=Long.class)
    int insert(Express record);

    @Insert({
            "insert into express (expressId,batchNo, expressCompany, ",
            "price,",
            "expressMobile, expressProvince,",
            "expressCity, expressDistrict,",
            "expressAddress,expressConsignee) ",
            "values (#{expressId,jdbcType=BIGINT},#{batchNo,jdbcType=VARCHAR},",
            "#{expressCompany,jdbcType=VARCHAR},",
            "#{price,jdbcType=INTEGER},",
            "#{expressMobile,jdbcType=VARCHAR},#{expressProvince,jdbcType=VARCHAR}, ",
            "#{expressCity,jdbcType=VARCHAR}, #{expressDistrict,jdbcType=VARCHAR}, ",
            "#{expressAddress,jdbcType=VARCHAR},#{expressConsignee,jdbcType=VARCHAR})",
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="expressId", before=false, resultType=Long.class)
    int insertExpress(Express record);
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table express
     *
     * @mbggenerated Sun Sep 25 20:38:29 CST 2016
     */
    int insertSelective(Express record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table express
     *
     * @mbggenerated Sun Sep 25 20:38:29 CST 2016
     */
    List<Express> selectByExample(ExpressExample example);


    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table express
     *
     * @mbggenerated Sun Sep 25 20:38:29 CST 2016
     */
    @Select({
            "select",
            "expressId, batchNo, expressCompany, expressNumber, `type`, delivery, exportTag, ",
            "price, weight, expressConsignee, expressMobile, expressSchoolId, expressSchool, ",
            "expressProvince, expressCity, expressDistrict, expressAddress, remark, `status`, ",
            "createTime, updateTime",
            "from express",
            "where expressId = #{expressId,jdbcType=BIGINT}"
    })
    @ResultMap("cn.kemis.dao.mapper.ExpressMapper.BaseResultMap")
    Express selectByPrimaryKey(Long expressId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table express
     *
     * @mbggenerated Sun Sep 25 20:38:29 CST 2016
     */
    int updateByExampleSelective(@Param("record") Express record, @Param("example") ExpressExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table express
     *
     * @mbggenerated Sun Sep 25 20:38:29 CST 2016
     */
    int updateByExample(@Param("record") Express record, @Param("example") ExpressExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table express
     *
     * @mbggenerated Sun Sep 25 20:38:29 CST 2016
     */
    int updateByPrimaryKeySelective(Express record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table express
     *
     * @mbggenerated Sun Sep 25 20:38:29 CST 2016
     */
    @Update({
            "update express",
            "set batchNo = #{batchNo,jdbcType=VARCHAR},",
            "expressCompany = #{expressCompany,jdbcType=VARCHAR},",
            "expressNumber = #{expressNumber,jdbcType=VARCHAR},",
            "`type` = #{type,jdbcType=VARCHAR},",
            "delivery = #{delivery,jdbcType=VARCHAR},",
            "exportTag = #{exportTag,jdbcType=BIT},",
            "price = #{price,jdbcType=INTEGER},",
            "weight = #{weight,jdbcType=VARCHAR},",
            "expressConsignee = #{expressConsignee,jdbcType=VARCHAR},",
            "expressMobile = #{expressMobile,jdbcType=VARCHAR},",
            "expressSchoolId = #{expressSchoolId,jdbcType=VARCHAR},",
            "expressSchool = #{expressSchool,jdbcType=VARCHAR},",
            "expressProvince = #{expressProvince,jdbcType=VARCHAR},",
            "expressCity = #{expressCity,jdbcType=VARCHAR},",
            "expressDistrict = #{expressDistrict,jdbcType=VARCHAR},",
            "expressAddress = #{expressAddress,jdbcType=VARCHAR},",
            "remark = #{remark,jdbcType=VARCHAR},",
            "`status` = #{status,jdbcType=TINYINT},",
            "createTime = #{createTime,jdbcType=TIMESTAMP},",
            "updateTime = #{updateTime,jdbcType=TIMESTAMP}",
            "where expressId = #{expressId,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(Express record);

    List<ExpressWorkProcessDomain> selectByExportDispatchedExpressRequest(ExportDispatchedExpressRequest request);

    int countByExportDispatchedExpressRequest(ExportDispatchedExpressRequest request);

    int countUnPackageByMap(Map<String, Object> paramMap);

    List<Express> selectUnPackageByMap(Map<String, Object> paramMap);
}