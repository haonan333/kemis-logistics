package cn.kemis.dao.mapper;

import cn.kemis.dao.BaseMapper;
import cn.kemis.model.ShipOrderSource;
import cn.kemis.model.ShipOrderSourceExample;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;

import java.util.List;
import java.util.Map;

/**
 * This class was generated by MyBatis Generator.
 * This class corresponds to the database table ship_order_source
 *
 * @mbggenerated Sun Sep 25 20:25:50 CST 2016
 */
@Mapper
public interface ShipOrderSourceMapper extends BaseMapper<ShipOrderSource, ShipOrderSourceExample> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ship_order_source
     *
     * @mbggenerated Sun Sep 25 20:25:50 CST 2016
     */
    int countByExample(ShipOrderSourceExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ship_order_source
     *
     * @mbggenerated Sun Sep 25 20:25:50 CST 2016
     */
    int deleteByExample(ShipOrderSourceExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ship_order_source
     *
     * @mbggenerated Sun Sep 25 20:25:50 CST 2016
     */
    @Delete({
        "delete from ship_order_source",
        "where shipOrderSourceId = #{shipOrderSourceId,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long shipOrderSourceId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ship_order_source
     *
     * @mbggenerated Sun Sep 25 20:25:50 CST 2016
     */
    @Insert({
        "insert into ship_order_source (batchNo, userId, ",
        "userName, province, ",
        "city, district, ",
        "schoolId, school, ",
        "theClass, consignee, ",
        "mobile, delivery, ",
        "address, totalCount, ",
        "unitCredits, subject, ",
        "campusAmbassador, expressId, ",
        "`status`, createTime, ",
        "updateTime, shipGoods)",
        "values (#{batchNo,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, ",
        "#{userName,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, ",
        "#{city,jdbcType=VARCHAR}, #{district,jdbcType=VARCHAR}, ",
        "#{schoolId,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, ",
        "#{theClass,jdbcType=VARCHAR}, #{consignee,jdbcType=VARCHAR}, ",
        "#{mobile,jdbcType=VARCHAR}, #{delivery,jdbcType=VARCHAR}, ",
        "#{address,jdbcType=VARCHAR}, #{totalCount,jdbcType=SMALLINT}, ",
        "#{unitCredits,jdbcType=VARCHAR}, #{subject,jdbcType=VARCHAR}, ",
        "#{campusAmbassador,jdbcType=BIT}, #{expressId,jdbcType=BIGINT}, ",
        "#{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{updateTime,jdbcType=TIMESTAMP}, #{shipGoods,jdbcType=LONGVARCHAR})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="shipOrderSourceId", before=false, resultType=Long.class)
    int insert(ShipOrderSource record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ship_order_source
     *
     * @mbggenerated Sun Sep 25 20:25:50 CST 2016
     */
    int insertSelective(ShipOrderSource record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ship_order_source
     *
     * @mbggenerated Sun Sep 25 20:25:50 CST 2016
     */
    List<ShipOrderSource> selectByExampleWithBLOBs(ShipOrderSourceExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ship_order_source
     *
     * @mbggenerated Sun Sep 25 20:25:50 CST 2016
     */
    List<ShipOrderSource> selectByExample(ShipOrderSourceExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ship_order_source
     *
     * @mbggenerated Sun Sep 25 20:25:50 CST 2016
     */
    @Select({
        "select",
        "shipOrderSourceId, batchNo, userId, userName, province, city, district, schoolId, ",
        "school, theClass, consignee, mobile, delivery, address, totalCount, unitCredits, ",
        "subject, campusAmbassador, expressId, `status`, createTime, updateTime, shipGoods",
        "from ship_order_source",
        "where shipOrderSourceId = #{shipOrderSourceId,jdbcType=BIGINT}"
    })
    @ResultMap("cn.kemis.dao.mapper.ShipOrderSourceMapper.ResultMapWithBLOBs")
    ShipOrderSource selectByPrimaryKey(Long shipOrderSourceId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ship_order_source
     *
     * @mbggenerated Sun Sep 25 20:25:50 CST 2016
     */
    int updateByExampleSelective(@Param("record") ShipOrderSource record, @Param("example") ShipOrderSourceExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ship_order_source
     *
     * @mbggenerated Sun Sep 25 20:25:50 CST 2016
     */
    int updateByExampleWithBLOBs(@Param("record") ShipOrderSource record, @Param("example") ShipOrderSourceExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ship_order_source
     *
     * @mbggenerated Sun Sep 25 20:25:50 CST 2016
     */
    int updateByExample(@Param("record") ShipOrderSource record, @Param("example") ShipOrderSourceExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ship_order_source
     *
     * @mbggenerated Sun Sep 25 20:25:50 CST 2016
     */
    int updateByPrimaryKeySelective(ShipOrderSource record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ship_order_source
     *
     * @mbggenerated Sun Sep 25 20:25:50 CST 2016
     */
    @Update({
        "update ship_order_source",
        "set batchNo = #{batchNo,jdbcType=VARCHAR},",
          "userId = #{userId,jdbcType=VARCHAR},",
          "userName = #{userName,jdbcType=VARCHAR},",
          "province = #{province,jdbcType=VARCHAR},",
          "city = #{city,jdbcType=VARCHAR},",
          "district = #{district,jdbcType=VARCHAR},",
          "schoolId = #{schoolId,jdbcType=VARCHAR},",
          "school = #{school,jdbcType=VARCHAR},",
          "theClass = #{theClass,jdbcType=VARCHAR},",
          "consignee = #{consignee,jdbcType=VARCHAR},",
          "mobile = #{mobile,jdbcType=VARCHAR},",
          "delivery = #{delivery,jdbcType=VARCHAR},",
          "address = #{address,jdbcType=VARCHAR},",
          "totalCount = #{totalCount,jdbcType=SMALLINT},",
          "unitCredits = #{unitCredits,jdbcType=VARCHAR},",
          "subject = #{subject,jdbcType=VARCHAR},",
          "campusAmbassador = #{campusAmbassador,jdbcType=BIT},",
          "expressId = #{expressId,jdbcType=BIGINT},",
          "`status` = #{status,jdbcType=TINYINT},",
          "createTime = #{createTime,jdbcType=TIMESTAMP},",
          "updateTime = #{updateTime,jdbcType=TIMESTAMP},",
          "shipGoods = #{shipGoods,jdbcType=LONGVARCHAR}",
        "where shipOrderSourceId = #{shipOrderSourceId,jdbcType=BIGINT}"
    })
    int updateByPrimaryKeyWithBLOBs(ShipOrderSource record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ship_order_source
     *
     * @mbggenerated Sun Sep 25 20:25:50 CST 2016
     */
    @Update({
        "update ship_order_source",
        "set batchNo = #{batchNo,jdbcType=VARCHAR},",
          "userId = #{userId,jdbcType=VARCHAR},",
          "userName = #{userName,jdbcType=VARCHAR},",
          "province = #{province,jdbcType=VARCHAR},",
          "city = #{city,jdbcType=VARCHAR},",
          "district = #{district,jdbcType=VARCHAR},",
          "schoolId = #{schoolId,jdbcType=VARCHAR},",
          "school = #{school,jdbcType=VARCHAR},",
          "theClass = #{theClass,jdbcType=VARCHAR},",
          "consignee = #{consignee,jdbcType=VARCHAR},",
          "mobile = #{mobile,jdbcType=VARCHAR},",
          "delivery = #{delivery,jdbcType=VARCHAR},",
          "address = #{address,jdbcType=VARCHAR},",
          "totalCount = #{totalCount,jdbcType=SMALLINT},",
          "unitCredits = #{unitCredits,jdbcType=VARCHAR},",
          "subject = #{subject,jdbcType=VARCHAR},",
          "campusAmbassador = #{campusAmbassador,jdbcType=BIT},",
          "expressId = #{expressId,jdbcType=BIGINT},",
          "`status` = #{status,jdbcType=TINYINT},",
          "createTime = #{createTime,jdbcType=TIMESTAMP},",
          "updateTime = #{updateTime,jdbcType=TIMESTAMP}",
        "where shipOrderSourceId = #{shipOrderSourceId,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(ShipOrderSource record);

    //获取 count
    int countByMap(Map<String,Object> map);

    //获取列表
    List<ShipOrderSource> selectByMap(Map<String, Object> param);
}